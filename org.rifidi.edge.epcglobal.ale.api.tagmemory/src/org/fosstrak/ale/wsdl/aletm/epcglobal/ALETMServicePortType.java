
package org.fosstrak.ale.wsdl.aletm.epcglobal;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.jws.soap.SOAPBinding.ParameterStyle;

/**
 * This class was generated by Apache CXF (incubator) 2.0.4-incubator
 * Fri Apr 16 14:42:07 KST 2010
 * Generated source version: 2.0.4-incubator
 * 
 */

@WebService(targetNamespace = "urn:epcglobal:aletm:wsdl:1", name = "ALETMServicePortType")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)

public interface ALETMServicePortType {

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetStandardVersionResult", targetNamespace = "urn:epcglobal:aletm:wsdl:1", partName = "getStandardVersionReturn")
    @WebMethod
    public java.lang.String getStandardVersion(
        @WebParam(partName = "parms", name = "GetStandardVersion", targetNamespace = "urn:epcglobal:aletm:wsdl:1")
        EmptyParms parms
    ) throws ImplementationExceptionResponse;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetTMSpecResult", targetNamespace = "urn:epcglobal:aletm:wsdl:1", partName = "getTMSpecReturn")
    @WebMethod
    public org.fosstrak.ale.xsd.ale.epcglobal.TMSpec getTMSpec(
        @WebParam(partName = "parms", name = "GetTMSpec", targetNamespace = "urn:epcglobal:aletm:wsdl:1")
        GetTMSpec parms
    ) throws NoSuchNameExceptionResponse, SecurityExceptionResponse, ImplementationExceptionResponse;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "UndefineTMSpecResult", targetNamespace = "urn:epcglobal:aletm:wsdl:1", partName = "undefineTMSpecReturn")
    @WebMethod
    public org.fosstrak.ale.wsdl.aletm.epcglobal.UndefineTMSpecResult undefineTMSpec(
        @WebParam(partName = "parms", name = "UndefineTMSpec", targetNamespace = "urn:epcglobal:aletm:wsdl:1")
        UndefineTMSpec parms
    ) throws NoSuchNameExceptionResponse, SecurityExceptionResponse, ImplementationExceptionResponse;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetVendorVersionResult", targetNamespace = "urn:epcglobal:aletm:wsdl:1", partName = "getVendorVersionReturn")
    @WebMethod
    public java.lang.String getVendorVersion(
        @WebParam(partName = "parms", name = "GetVendorVersion", targetNamespace = "urn:epcglobal:aletm:wsdl:1")
        EmptyParms parms
    ) throws ImplementationExceptionResponse;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "DefineTMSpecResult", targetNamespace = "urn:epcglobal:aletm:wsdl:1", partName = "defineTMSpecReturn")
    @WebMethod
    public org.fosstrak.ale.wsdl.aletm.epcglobal.DefineTMSpecResult defineTMSpec(
        @WebParam(partName = "parms", name = "DefineTMSpec", targetNamespace = "urn:epcglobal:aletm:wsdl:1")
        DefineTMSpec parms
    ) throws DuplicateNameExceptionResponse, TMSpecValidationExceptionResponse, SecurityExceptionResponse, ImplementationExceptionResponse;

    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    @WebResult(name = "GetTMSpecNamesResult", targetNamespace = "urn:epcglobal:aletm:wsdl:1", partName = "getTMSpecNamesReturn")
    @WebMethod
    public org.fosstrak.ale.wsdl.aletm.epcglobal.ArrayOfString getTMSpecNames(
        @WebParam(partName = "parms", name = "GetTMSpecNames", targetNamespace = "urn:epcglobal:aletm:wsdl:1")
        EmptyParms parms
    ) throws SecurityExceptionResponse, ImplementationExceptionResponse;
}
