
package org.fosstrak.ale.wsdl.ale.epcglobal;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import org.fosstrak.ale.wsdl.ale.epcglobal.ALEServicePortType;

/**
 * This class was generated by Apache CXF (incubator) 2.0.4-incubator
 * Fri Apr 16 14:42:02 KST 2010
 * Generated source version: 2.0.4-incubator
 * 
 */

@WebServiceClient(name = "ALEService", targetNamespace = "urn:epcglobal:ale:wsdl:1", wsdlLocation = "file:/C:/Documents and Settings/Auto-ID Lab Team/My Documents/ALE middleware source/workspace/fc-commons/src/main/resources/wsdl/EPCglobal-ale-1_1-ale.wsdl")
public class ALEService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("urn:epcglobal:ale:wsdl:1", "ALEService");
    public final static QName ALEServicePort = new QName("urn:epcglobal:ale:wsdl:1", "ALEServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/C:/Documents and Settings/Auto-ID Lab Team/My Documents/ALE middleware source/workspace/fc-commons/src/main/resources/wsdl/EPCglobal-ale-1_1-ale.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/C:/Documents and Settings/Auto-ID Lab Team/My Documents/ALE middleware source/workspace/fc-commons/src/main/resources/wsdl/EPCglobal-ale-1_1-ale.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public ALEService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ALEService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ALEService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns ALEServicePort
     */
    @WebEndpoint(name = "ALEServicePort")
    public ALEServicePortType getALEServicePort() {
        return (ALEServicePortType)super.getPort(ALEServicePort, ALEServicePortType.class);
    }

}
